Javascript

//comment
/*comment*/ 
var		variable
.length		equal to python len().
.push()		add a new element in array only just the LAST
.pop()		remove the last element in array only just the LAST
.shift()	remove the first element in array only just the FIRST
.unshift()	add a new element in array only just the FIRST

function ***(a,b) {return *;}	
		create a function with param a & b
		the return is not MUST but return undefined when there is no return
console.log("***")	print ***

pseudo code ##伪代码

== & ===	equality operator & strict equality operator
		three is more strict ex. 3==="3" return false  MUST be 3===3 
		two will convert the TYPE of value ex. 3=="3"  return true
!= & !==	not equality operator & strict not equality operator

typeof 3 return 'number'
typeof '3' return 'string'

if(){

} else if(){

} else{

}

switch (true) {
  case *:
	break;
}

&& ||

objects		##简化版的散列表
myObj.**	a dot . and the key of elements will recall the value
myObj[**]	another way to recall something

myObj[**] or myObj.**
delete myObj.** or myObj[**]
		add and delete a properties from objects

myObj.hasOwnProperty("**")
		check the ** is myObj's element return boolean

while(i<5)
for(var i=0;i<5;i++)
		those are loops

do{}		while check at first but do......while check on last
while(i<5)	do......while means do it and then check if while is false then stop check at last

Math.random	return 0~1
Math.floor	if 0.9 return 0

parseInt(string, radix)	
		transfor to Int	radix ##进制 between 2~36



if(a>b) {
  return "a is greater";
} else {
  return "b is greater";
}

OR

return a>b ? "a is greater" : "b is greater";
		condition ? statement-if-true : statement-if-false;

if(a===b){
  return "equal";
} else if(a > b){
  return "a greater";
} else {
  return "b greater";
}

OR
return a===b ? "equal" : ? (a>b)? "a greater" : "b greater";
		condition ? statement-if: condition ? statement-elseif : statement-else


